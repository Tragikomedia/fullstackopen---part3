{"version":3,"sources":["Input.js","AddContactForm.js","Contact.js","Display.js","Filter.js","Notification.js","db.js","App.js","index.js"],"names":["Input","label","type","value","handleChange","onChange","AddContactForm","handleSubmit","inputData","onSubmit","map","Contact","contact","handleDelete","name","number","onClick","Display","contacts","id","Filter","Notification","notification","message","typeStyle","color","backgroundColor","style","border","fontStyle","fontSize","margin","padding","baseUrl","connectionError","error","toExport","getAll","a","axios","get","data","persons","create","post","fullPerson","err","response","delContact","window","confirm","cancel","delete","update","put","savedContact","element","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","filter","list","visiblePeople","setVisiblePeople","setNotification","showNotification","newNotification","setTimeout","showError","useCallback","fetchContacts","db","useEffect","nameRepeats","find","person","cleanInput","updateNumber","updatedContact","updateList","addContact","event","preventDefault","existingContact","newPerson","filterOutContact","removeContact","deleteContact","target","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1860a5c1.chunk.js","sourcesContent":["const Input = ({ label, type, value, handleChange }) => (\n  <div>\n    {label}: <input type={type} value={value} onChange={handleChange} />\n  </div>\n);\n\nexport default Input;\n","import Input from \"./Input\";\n\nconst AddContactForm = ({ handleSubmit, inputData }) => (\n  <>\n    <form onSubmit={handleSubmit}>\n      {inputData.map(({ label, type, value, handleChange }) => (\n        <Input\n          label={label}\n          type={type}\n          value={value}\n          handleChange={handleChange}\n          key={label}\n        />\n      ))}\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  </>\n);\n\nexport default AddContactForm;\n","const Contact = ({ contact, handleDelete }) => (\n  <>\n    <li>\n      {contact.name} {contact.number}{\" \"}\n      <button onClick={() => handleDelete(contact)}>del</button>\n    </li>\n  </>\n);\n\nexport default Contact;\n","import Contact from \"./Contact\";\n\nconst Display = ({ contacts, handleDelete }) => (\n  <>\n    <ul>\n      {contacts.map((contact) => (\n        <Contact\n          key={contact.id}\n          contact={contact}\n          handleDelete={handleDelete}\n        />\n      ))}\n    </ul>\n  </>\n);\n\nexport default Display;\n","import Input from \"./Input\";\n\nconst Filter = ({ value, handleChange }) => (\n  <>\n    <Input\n      label={\"Show names containing\"}\n      type={\"text\"}\n      value={value}\n      handleChange={handleChange}\n    />\n  </>\n);\n\nexport default Filter;\n","const Notification = ({ notification }) => {\n  const { message, type } = notification;\n  const basicStyle = {\n    border: \"5px solid black\",\n    fontStyle: \"italic\",\n    fontSize: \"2rem\",\n    margin: \"5px 0\",\n    padding: \"5px 10px\",\n  };\n  const typeStyle =\n    type === \"error\"\n      ? { color: \"white\", backgroundColor: \"red\" }\n      : { color: \"black\", backgroundColor: \"MediumSeaGreen\" };\n  return message ? (\n    <div style={{ ...basicStyle, ...typeStyle }}>\n      <p style={{ margin: 0 }}>{message}</p>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst connectionError = { error: \"Cannot connect to database\" };\nconst notFoundError = (element) => ({\n  error: `Could not find ${element} on the server`,\n});\n\nconst getAll = async () => {\n  try {\n    const { data } = await axios.get(baseUrl);\n    return { persons: data.persons };\n  } catch {\n    return connectionError;\n  }\n};\n\nconst create = async (contact) => {\n  try {\n    const { data } = await axios.post(baseUrl, contact);\n    const { error } = data;\n    return { fullPerson: data, error };\n  } catch (error) {\n    const err = error?.response?.data;\n    if (err) return err;\n    return connectionError;\n  }\n};\n\nconst delContact = async (contact) => {\n  if (!window.confirm(`Are you sure you want to delete ${contact.name}?`))\n    return { cancel: true };\n  try {\n    await axios.delete(`${baseUrl}/${contact.id}`);\n    return {};\n  } catch {\n    return connectionError;\n  }\n};\n\nconst update = async (contact) => {\n  if (\n    !window.confirm(\n      `Contact ${contact.name} already exists. Replace the old number with the new one?`\n    )\n  )\n    return { cancel: true };\n  try {\n    const { data } = await axios.put(`${baseUrl}/${contact.id}`, contact);\n    return { savedContact: data };\n  } catch (error) {\n    const err = error?.response?.data;\n    if (err) return err;\n    return notFoundError(contact.name);\n  }\n};\n\nconst toExport = { getAll, create, delContact, update };\n\nexport default toExport;\n","import { useState, useEffect, useCallback } from \"react\";\nimport AddContactForm from \"./AddContactForm\";\nimport Display from \"./Display\";\nimport Filter from \"./Filter\";\nimport Notification from \"./Notification\";\nimport db from \"./db\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [visiblePeople, setVisiblePeople] = useState({\n    filter: \"\",\n    list: [...persons],\n  });\n  const [notification, setNotification] = useState({});\n\n  const showNotification = (newNotification) => {\n    setNotification(newNotification);\n    setTimeout(() => {\n      setNotification({});\n    }, 5000);\n  };\n\n  const showError = useCallback(\n    (error) => showNotification({ message: error, type: \"error\" }),\n    []\n  );\n\n  const fetchContacts = useCallback(async () => {\n    const { persons, error } = await db.getAll();\n    if (error) return showError(error);\n    setPersons(persons);\n    setVisiblePeople({ filter: \"\", list: persons });\n  }, [showError]);\n\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    const filter = event.target.value;\n    setVisiblePeople({\n      filter,\n      list: persons.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase())\n      ),\n    });\n  };\n\n  const nameRepeats = (name, persons) =>\n    persons.find((person) => person.name === name);\n\n  const cleanInput = () => {\n    setNewName(\"\");\n    setNewPhone(\"\");\n  };\n\n  const updateContacts = (person) => {\n    setPersons([...persons, person]);\n    setVisiblePeople({\n      filter: \"\",\n      list: [...persons, person],\n    });\n  };\n\n  const updateNumber = async (contact) => {\n    let updatedContact = { ...contact, number: newPhone };\n    const { cancel, savedContact, error } = await db.update(updatedContact);\n    if (error) return showError(error);\n    if (cancel) return;\n    const updateList = (list) =>\n      list.map((person) =>\n        person.id !== savedContact.id ? person : savedContact\n      );\n    setPersons(updateList(persons));\n    setVisiblePeople({\n      ...visiblePeople,\n      list: updateList(visiblePeople.list),\n    });\n    cleanInput();\n    showNotification({ message: \"Phone number changed\", type: \"message\" });\n  };\n\n  const addContact = async (event) => {\n    event.preventDefault();\n    const existingContact = nameRepeats(newName, persons);\n    if (existingContact) return updateNumber(existingContact);\n    const newPerson = { name: newName, number: newPhone };\n    const { error, fullPerson } = await db.create(newPerson);\n    if (error) return showError(error);\n    cleanInput();\n    updateContacts(fullPerson);\n    showNotification({\n      message: `${fullPerson.name} added to contacts`,\n      type: \"message\",\n    });\n  };\n\n  const filterOutContact = ({ id }) => {\n    const removeContact = (contacts) =>\n      contacts.filter((contact) => contact.id !== id);\n    setPersons(removeContact(persons));\n    setVisiblePeople({\n      ...visiblePeople,\n      list: removeContact(visiblePeople.list),\n    });\n  };\n\n  const deleteContact = async (contact) => {\n    const { cancel, error } = await db.delContact(contact);\n    if (cancel) return;\n    if (error) return showError(error);\n    filterOutContact(contact);\n    showNotification({\n      message: `${contact.name} removed from contacts`,\n      type: \"message\",\n    });\n  };\n\n  const inputData = [\n    {\n      label: \"name\",\n      type: \"text\",\n      value: newName,\n      handleChange: handleNameChange,\n    },\n    {\n      label: \"tel\",\n      type: \"tel\",\n      value: newPhone,\n      handleChange: handlePhoneChange,\n    },\n  ];\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <Filter value={visiblePeople.filter} handleChange={handleFilterChange} />\n      <h2>Add new contacts</h2>\n      <AddContactForm handleSubmit={addContact} inputData={inputData} />\n      <h2>Numbers</h2>\n      <Display contacts={visiblePeople.list} handleDelete={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}